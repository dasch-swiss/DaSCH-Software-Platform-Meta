name: CI

on:
  push:

permissions:
  contents: write
  pull-requests: write

jobs:

  # Run tests and publish amd64
  build_amd64:
    runs-on: actuated
    concurrency:
      group: ${{ github.ref }}-amd64
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # gets additionally all tags which we need
      - uses: extractions/setup-just@v1
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - name: Add rust toolchains
        run: |
          rustup toolchain install stable --profile minimal
          rustup toolchain install nightly --profile minimal
          rustup component add rustfmt --toolchain nightly
      - uses: Swatinem/rust-cache@v2
      - run: just check
      - run: just build
      - run: just test
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - run: just build-amd64
      - name: Push image to Docker hub only on main or tag (release)
        if: (github.ref_name == 'main' || startsWith(github.ref, 'refs/tags'))
        run: just push-amd64

  build_aarch64:
    runs-on: actuated-aarch64
    concurrency:
      group: ${{ github.ref }}-aarch64
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # gets additionally all tags which we need
      - uses: extractions/setup-just@v1
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - name: Add rust toolchains
        run: |
          rustup toolchain install stable --profile minimal
          rustup toolchain install nightly --profile minimal
          rustup component add rustfmt --toolchain nightly
      - uses: Swatinem/rust-cache@v2
      - run: just check
      - run: just build
      - run: just test
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - run: just build-arm64
      - name: Push image to Docker hub only on main or tag (release)
        if: (github.ref_name == 'main' || startsWith(github.ref, 'refs/tags'))
        run: just push-arm64

  # publish manifest combining aarch64 and amd64 images
  publish_manifest:
    name: Build and Publish Manifest to Dockerhub
    runs-on: ubuntu-latest
    needs: [build_amd64, build_aarch64]
    if: (github.ref_name == 'main' || startsWith(github.ref, 'refs/tags')) && github.event_name != 'schedule'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: extractions/setup-just@v1
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - run: just publish-manifest

  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.DASCHBOT_PAT }}
          config-file: .github/release-please/config.json
          manifest-file: .github/release-please/manifest.json
